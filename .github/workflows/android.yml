name: Android CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle
      run: ./gradlew build
      
    - name: Run Tests
      run: ./gradlew test
      
    - name: Build Debug APK
      run: ./gradlew assembleDebug
      
    - name: Build Release APK
      run: ./gradlew assembleRelease
      
    - name: Sign Release APK
      uses: r0adkll/sign-android-release@v1
      id: sign_app
      with:
        releaseDirectory: app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.KEY_ALIAS }}
        keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}
      env:
        BUILD_TOOLS_VERSION: "33.0.0"
        
    - name: Upload Debug APK
      uses: actions/upload-artifact@v3
      with:
        name: app-debug
        path: app/build/outputs/apk/debug/app-debug.apk
        
    - name: Upload Signed Release APK
      uses: actions/upload-artifact@v3
      with:
        name: app-release-signed
        path: ${{ steps.sign_app.outputs.signedReleaseFile }}
        
    - name: Create Release
      id: create_release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        draft: false
        prerelease: false
        
    - name: Upload Release APK
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.sign_app.outputs.signedReleaseFile }}
        asset_name: TravelPlanApp-v${{ github.run_number }}.apk
        asset_content_type: application/vnd.android.package-archive
        
  deploy-website:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install Dependencies
      working-directory: ./TravelPlanWebsite/travel-plan-app
      run: npm install
      
    - name: Build Website
      working-directory: ./TravelPlanWebsite/travel-plan-app
      run: npm run build
      
    - name: Download APK
      uses: actions/download-artifact@v3
      with:
        name: app-release-signed
        path: ./TravelPlanWebsite/travel-plan-app/public/download
        
    - name: Rename APK
      run: mv ./TravelPlanWebsite/travel-plan-app/public/download/*.apk ./TravelPlanWebsite/travel-plan-app/public/download/TravelPlanApp.apk
      
    - name: Deploy to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        folder: ./TravelPlanWebsite/travel-plan-app/dist
        branch: gh-pages
